# Generated by Django 5.1.3 on 2024-11-29 13:53

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brigade',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Master',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('brigade', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.brigade')),
                ('facility', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.facility')),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.PositiveIntegerField()),
                ('date_type_quantity_plannedWorkTime_machinery', models.JSONField()),
                ('processed_by_logistician', models.BooleanField(default=False)),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.master')),
                ('subdivision', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subdivision')),
            ],
        ),
        migrations.CreateModel(
            name='Machinery',
            fields=[
                ('type', models.CharField(max_length=100)),
                ('kind', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('license_plate', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('technical_passport', models.JSONField()),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.driver')),
                ('subdivision', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subdivision')),
            ],
        ),
        migrations.AddField(
            model_name='brigade',
            name='subdivision',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subdivision'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('master', 'Мастер бригады'), ('logistician', 'Логист'), ('dispatcher', 'Центральный диспетчер'), ('admin', 'Администратор')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('subdivision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.subdivision')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Waybill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_time_of_departure', models.DateTimeField()),
                ('planned_time_of_arrival_at_the_facility', models.DateTimeField()),
                ('planned_time_of_work_at_the_facility', models.PositiveIntegerField()),
                ('actual_time_of_departure', models.DateTimeField(blank=True, null=True)),
                ('actual_time_of_arrival_at_the_facility', models.DateTimeField(blank=True, null=True)),
                ('actual_time_of_work_at_the_facility', models.DateTimeField(blank=True, null=True)),
                ('actual_time_of_waiting_at_the_facility', models.DateTimeField(blank=True, null=True)),
                ('closed', models.BooleanField(default=False)),
                ('facility', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.facility')),
                ('machinery', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.machinery')),
            ],
        ),
    ]
